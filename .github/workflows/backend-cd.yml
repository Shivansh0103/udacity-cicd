name: Backend Continuous Deployment

on:
  push:
    branches:
      - master
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linter
        run: flake8 .

  test:
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

  build:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image to ECR
        run: |
          docker build -t ${{ secrets.ECR_REPO_URL_BACKEND }}:${{ github.sha }} .
          docker push ${{ secrets.ECR_REPO_URL_BACKEND }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: starter/backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update Kubernetes kubeconfig
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Set Kubernetes image tag
        run: |
          cd k8s
          kustomize edit set image backend=${{ secrets.ECR_REPO_URL_BACKEND }}:${{ github.sha }}

      - name: Apply Kubernetes manifests
        run: |
          cd k8s
          kustomize build | kubectl apply -f -